#include <stdio.h>
#include <ctype.h>

#define SIZE 50
char stack[SIZE];
int top = -1;

void push(char c) { stack[++top] = c; }
char pop() { return stack[top--]; }
int precedence(char c) {
    if (c == '^') return 3;
    if (c == '*' || c == '/') return 2;
    if (c == '+' || c == '-') return 1;
    return -1;
}

int main() {
    char infix[50], postfix[50], ch;
    int i=0, j=0;
    printf("Enter infix expression: ");
    scanf("%s", infix);

    while ((ch = infix[i++]) != '\0') {
        if (isalnum(ch)) postfix[j++] = ch;
        else if (ch == '(') push(ch);
        else if (ch == ')') {
            while (top != -1 && stack[top] != '(')
                postfix[j++] = pop();
            top--; // remove '('
        }
        else {
            while (top != -1 && precedence(stack[top]) >= precedence(ch))
                postfix[j++] = pop();
            push(ch);
        }
    }
    while (top != -1) postfix[j++] = pop();
    postfix[j] = '\0';

    printf("Postfix Expression: %s\n", postfix);
    return 0;
}

